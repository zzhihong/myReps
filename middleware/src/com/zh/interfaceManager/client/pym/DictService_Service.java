
package com.zh.interfaceManager.client.pym;

import java.io.Serializable;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DictService", targetNamespace = "http://dict.railway.com/", wsdlLocation = "file:/C:/dictService.wsdl")
public class DictService_Service
    extends Service implements Serializable
{

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private final static URL DICTSERVICE_WSDL_LOCATION;
    private final static WebServiceException DICTSERVICE_EXCEPTION;
    private final static QName DICTSERVICE_QNAME = new QName("http://dict.railway.com/", "DictService");

    static {
        URL url = null;
        WebServiceException e = null;
        String path = Thread.currentThread().getContextClassLoader().getResource("dictService.wsdl").toString();
        try {
            URL baseUrl;
            baseUrl = com.zh.interfaceManager.client.pym.DictService_Service.class.getResource(".");
            url = new URL(baseUrl, path);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DICTSERVICE_WSDL_LOCATION = url;
        DICTSERVICE_EXCEPTION = e;
    }

    public DictService_Service() {
        super(__getWsdlLocation(), DICTSERVICE_QNAME);
    }

    public DictService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), DICTSERVICE_QNAME, features);
    }

    public DictService_Service(URL wsdlLocation) {
        super(wsdlLocation, DICTSERVICE_QNAME);
    }

    public DictService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DICTSERVICE_QNAME, features);
    }

    public DictService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DictService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DictService
     */
    @WebEndpoint(name = "DictServiceImplPort")
    public DictService getDictServiceImplPort() {
        return super.getPort(new QName("http://dict.railway.com/", "DictServiceImplPort"), DictService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DictService
     */
    @WebEndpoint(name = "DictServiceImplPort")
    public DictService getDictServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://dict.railway.com/", "DictServiceImplPort"), DictService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DICTSERVICE_EXCEPTION!= null) {
            throw DICTSERVICE_EXCEPTION;
        }
        return DICTSERVICE_WSDL_LOCATION;
    }

}
