
package com.zh.interfaceManager.client.jpk;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TRSForCustomerSupportCenterServices2Service", targetNamespace = "http://TRSForCustomerSupportCenterServices2Service")
public class TRSForCustomerSupportCenterServices2Service
    extends Service
{

    private final static URL TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_WSDL_LOCATION;
    private final static WebServiceException TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_EXCEPTION;
    private final static QName TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_QNAME = new QName("http://TRSForCustomerSupportCenterServices2Service", "TRSForCustomerSupportCenterServices2Service");

    static {
        URL url = null;
        WebServiceException e = null;
        String path=Thread.currentThread().getContextClassLoader().getResource("TRSForCustomerSupportCenterServices2Service.wsdl").toString();
        try {
        	URL baseUrl;
            baseUrl = com.zh.interfaceManager.client.dpdd.TRSForCustomerSupportCenterServices2Service.class.getResource(".");
            url = new URL(baseUrl, path);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_WSDL_LOCATION = url;
        TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_EXCEPTION = e;
    }

    public TRSForCustomerSupportCenterServices2Service() {
        super(__getWsdlLocation(), TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_QNAME);
    }

    public TRSForCustomerSupportCenterServices2Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_QNAME, features);
    }

    public TRSForCustomerSupportCenterServices2Service(URL wsdlLocation) {
        super(wsdlLocation, TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_QNAME);
    }

    public TRSForCustomerSupportCenterServices2Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_QNAME, features);
    }

    public TRSForCustomerSupportCenterServices2Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TRSForCustomerSupportCenterServices2Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TRSForCustomerSupportCenterServices2Delegate
     */
    @WebEndpoint(name = "TRSForCustomerSupportCenterServices2DelegatePort")
    public TRSForCustomerSupportCenterServices2Delegate getTRSForCustomerSupportCenterServices2DelegatePort() {
        return super.getPort(new QName("http://TRSForCustomerSupportCenterServices2Service", "TRSForCustomerSupportCenterServices2DelegatePort"), TRSForCustomerSupportCenterServices2Delegate.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TRSForCustomerSupportCenterServices2Delegate
     */
    @WebEndpoint(name = "TRSForCustomerSupportCenterServices2DelegatePort")
    public TRSForCustomerSupportCenterServices2Delegate getTRSForCustomerSupportCenterServices2DelegatePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://TRSForCustomerSupportCenterServices2Service", "TRSForCustomerSupportCenterServices2DelegatePort"), TRSForCustomerSupportCenterServices2Delegate.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_EXCEPTION!= null) {
            throw TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_EXCEPTION;
        }
        return TRSFORCUSTOMERSUPPORTCENTERSERVICES2SERVICE_WSDL_LOCATION;
    }

}
