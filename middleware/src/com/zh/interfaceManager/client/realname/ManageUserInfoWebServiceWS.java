
package com.zh.interfaceManager.client.realname;

import java.io.Serializable;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ManageUserInfoWebServiceWS", targetNamespace = "http://ManageUserInfoWebServiceWS", wsdlLocation = "file:/D:/workspace/middleware/src/ManageUserInfoWebServiceWS.wsdl")
public class ManageUserInfoWebServiceWS
    extends Service implements Serializable
{

    private final static URL MANAGEUSERINFOWEBSERVICEWS_WSDL_LOCATION;
    private final static WebServiceException MANAGEUSERINFOWEBSERVICEWS_EXCEPTION;
    private final static QName MANAGEUSERINFOWEBSERVICEWS_QNAME = new QName("http://ManageUserInfoWebServiceWS", "ManageUserInfoWebServiceWS");

    static {
        URL url = null;
        WebServiceException e = null;
        String path = Thread.currentThread().getContextClassLoader().getResource("ManageUserInfoWebServiceWS.wsdl").toString();
        try {
        	URL baseUrl;
            baseUrl = com.zh.interfaceManager.client.realname.ManageUserInfoWebServiceWS.class.getResource(".");
            url = new URL(baseUrl, path);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MANAGEUSERINFOWEBSERVICEWS_WSDL_LOCATION = url;
        MANAGEUSERINFOWEBSERVICEWS_EXCEPTION = e;
    }

    public ManageUserInfoWebServiceWS() {
        super(__getWsdlLocation(), MANAGEUSERINFOWEBSERVICEWS_QNAME);
    }

    public ManageUserInfoWebServiceWS(WebServiceFeature... features) {
        super(__getWsdlLocation(), MANAGEUSERINFOWEBSERVICEWS_QNAME, features);
    }

    public ManageUserInfoWebServiceWS(URL wsdlLocation) {
        super(wsdlLocation, MANAGEUSERINFOWEBSERVICEWS_QNAME);
    }

    public ManageUserInfoWebServiceWS(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MANAGEUSERINFOWEBSERVICEWS_QNAME, features);
    }

    public ManageUserInfoWebServiceWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ManageUserInfoWebServiceWS(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ManageUserInfoWebServiceWSDelegate
     */
    @WebEndpoint(name = "ManageUserInfoWebServiceWSDelegatePort")
    public ManageUserInfoWebServiceWSDelegate getManageUserInfoWebServiceWSDelegatePort() {
        return super.getPort(new QName("http://ManageUserInfoWebServiceWS", "ManageUserInfoWebServiceWSDelegatePort"), ManageUserInfoWebServiceWSDelegate.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ManageUserInfoWebServiceWSDelegate
     */
    @WebEndpoint(name = "ManageUserInfoWebServiceWSDelegatePort")
    public ManageUserInfoWebServiceWSDelegate getManageUserInfoWebServiceWSDelegatePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ManageUserInfoWebServiceWS", "ManageUserInfoWebServiceWSDelegatePort"), ManageUserInfoWebServiceWSDelegate.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MANAGEUSERINFOWEBSERVICEWS_EXCEPTION!= null) {
            throw MANAGEUSERINFOWEBSERVICEWS_EXCEPTION;
        }
        return MANAGEUSERINFOWEBSERVICEWS_WSDL_LOCATION;
    }

}
